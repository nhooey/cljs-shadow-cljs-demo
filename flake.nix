{
  description = "A simple ClojureScript demo with shadow-cljs and Nix";

  inputs = {
    nixpkgs.url = "github:nixos/nixpkgs/nixos-25.05";
    flake-utils.url = "github:numtide/flake-utils";
    clj-nix.url = "github:jlesquembre/clj-nix";
  };

  outputs = { self, nixpkgs, flake-utils, clj-nix }:
    flake-utils.lib.eachDefaultSystem (system: let
      pkgs = nixpkgs.legacyPackages.${system};
      cljPkgs = clj-nix.lib.${system};

      # Assume default.nix and node-env.nix are generated by node2nix in the project root
      npmPackages = import ./default.nix { inherit pkgs; };
    in
    {
      devShells =
        let
          pkgs = nixpkgs.legacyPackages.${system};
          cljPkgs = clj-nix.lib.${system};
          npmPackages = import ./default.nix { inherit pkgs; };
        in
        {
          default = pkgs.mkShell {
            packages = with pkgs; [
              jdk21
              nodejs
              clojure
              npm

              # Symlink to the node_modules created by node2nix
              # This ensures shadow-cljs finds the Node.js dependencies.
              (pkgs.symlinkJoin {
                name = "node_modules";
                paths = [ npmPackages.node_modules ];
                postBuild = ''
                  ln -s $out node_modules
                '';
              })
            ];

            # Use clj-nix to manage Clojure dependencies defined in deps.edn
            CLOJURE_MAVEN_REPOS = cljPkgs.mkDepsCache {
              lockfile = ./deps-lock.json; # This file needs to be generated (see steps below)
            };

            # Ensure JAVA_HOME points to the correct JDK for shadow-cljs
            JAVA_HOME = "${pkgs.jdk21}/lib/openjdk";

            shellHook = ''
              echo "Entering ClojureScript development shell for ${pkgs.system}."
              echo "To start shadow-cljs, run: clj -M:cljs watch app"
              echo "Then open http://localhost:8000 in your browser."
            '';
          };
        };
    });
}
